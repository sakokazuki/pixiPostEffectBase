center(){
  position: absolute;
  margin auto;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

clearfix(){
  &::after{
    content: "";
    clear: both;
    display: block;
  }
}



hover(){
  cursor: pointer;
  .hover{
    opacity: 0;
  }
  img{
    transition: opacity 0.1s ease-in;
  }
  &:hover{
    img{
      opacity: 0;
    }
    .hover, .label{
      opacity: 1;
    }
  }
}

pos(x,y){
  top: y;
  left: x;
}

vendor(prop, args)
  -moz-{prop}: args
  -webkit-{prop}: args
  -moz-{prop}: args
  -ms-{prop}: args
  -o-{prop}: args
  {prop}: args

border-radius()
  vendor('border-radius', arguments)

box-shadow()
  vendor('box-shadow', arguments)

transition()
  vendor('transition', arguments)

transform()
  
  vendor('transform', arguments)

transform-origin()
  vendor('transform-origin', arguments)

user-select()
  vendor('user-select', arguments)

background-linear-gradient(startPoint, startColor, startInterval, endColor, endInterval, deprecatedWebkitStartPoint = false, deprecatedWebkitEndPoint = false)
  background-color startColor
  if deprecatedWebkitStartPoint && deprecatedWebkitEndPoint
    background-image -webkit-gradient(linear, deprecatedWebkitStartPoint, deprecatedWebkitEndPoint, color-stop(startInterval, startColor), color-stop(endInterval, endColor))
  background-image -webkit-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
  background-image -moz-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
  background-image -ms-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
  background-image -o-linear-gradient(startPoint, startColor startInterval, endColor endInterval)
  background-image linear-gradient(startPoint, startColor startInterval, endColor endInterval)
